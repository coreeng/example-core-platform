name: Validate

on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string

jobs:
  dockerfiles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfiles
        id: dockerfiles-lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          recursive: true

  opentofu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        id: setup-opentofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: "1.7.1"

      - name: Setup Terragrunt
        id: setup-terragrunt
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.55.19/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt -v

      - name: Check Terragrunt format
        id: tg-hclfmt-check
        shell: bash
        run: make tg-hclfmt-check

      - name: Check OpenTofu format
        id: tf-fmt-check
        shell: bash
        run: make tf-fmt-check

  environments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Environments
        id: environments-validate
        shell: bash
        run: make environments-validate

  tenants:
    runs-on: ubuntu-latest
    needs: lint-and-test-go-modules
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Validate Tenants
        id: tenants-validate
        shell: bash
        run: make tenants-validate

  helm-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Helm lint
        id: helm-lint
        run: |
          make helm-lint
  find-go-modules:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          PATHS=$(find . -mindepth 2 -not -path "*/vendor/*" -type f -name go.sum -printf '{"workdir":"%h"},')
          MATRIX="$(printf '{"include":[%s]}' "${PATHS%?}")"
          echo "${MATRIX}" | yq -o json
          echo "matrix=${MATRIX}" >> "${GITHUB_OUTPUT}"

  lint-and-test-go-modules:
    needs: find-go-modules
    strategy:
      matrix: ${{fromJson(needs.find-go-modules.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'
          cache-dependency-path: ${{ matrix.workdir }}
      - uses: golangci/golangci-lint-action@v5
        with:
          args: --timeout=30m
          working-directory: ${{ matrix.workdir }}
      - run: go test ./...
        if: matrix.workdir != './functional-tests'
        working-directory: ${{ matrix.workdir }}

